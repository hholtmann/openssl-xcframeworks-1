## -*- mode: perl; -*-

my %targets = ();

%targets = (

    #—————————————————————————————————————————————————————————————————————
    # Base setting templates
    #—————————————————————————————————————————————————————————————————————
    
    "all-base" => {
        template         => 1,
        cflags           => '-isysroot $(CROSS_TOP)/SDKs/$(CROSS_SDK) -fno-common'
    },
    
    "iphoneos-base" => {
        inherit_from     => [ "all-base" ],
        template         => 1,
        cflags           => add(sub { ((!defined($ENV{'CONFIG_DISABLE_BITCODE'}) || $ENV{'CONFIG_DISABLE_BITCODE'} ne 'true') && defined($ENV{'SDKVERSION'}) && $ENV{'SDKVERSION'} =~ /^(9|[1-9][0-9]+)\./ && $disabled{shared}) ? '-fembed-bitcode' : (); }),
    },

    "darwin64-arm64-cc" => {
        inherit_from     => [ "darwin-common", asm("") ],
        CFLAGS           => add("-Wall"),
        cflags           => add("-arch arm64"),
        lib_cppflags     => add("-DL_ENDIAN"),
        bn_ops           => "SIXTY_FOUR_BIT_LONG",
        perlasm_scheme   => "macosx",
    },


    #—————————————————————————————————————————————————————————————————————
    # Base cross-compiler target settings
    # - HAVE_FORK=0 for some targets lacking fork() in their SDK's.
    #—————————————————————————————————————————————————————————————————————

    "ios-cross-base" => {
        inherit_from    => [ "iphoneos-base" ],
        template         => 1,
        cflags           => add(sub { defined($ENV{'IOS_MIN_SDK_VERSION'}) ? '-mios-version-min=$(IOS_MIN_SDK_VERSION)' : '-mios-version-min=7.0'; }),
    },

    "ios-cross-base-old" => {
        inherit_from    => [ "iphoneos-base" ],
        template         => 1,
        cflags           => add('-mios-version-min=9.0'),
    },

    "tvos-cross-base" => {
        inherit_from    => [ "all-base" ],
        template         => 1,
        cflags           => add(sub { defined($ENV{'TVOS_MIN_SDK_VERSION'}) ? '-mtvos-version-min=$(TVOS_MIN_SDK_VERSION)' : '-mtvos-version-min=9.0'; }),
        defines          => [ "HAVE_FORK=0" ],
    },

    "watchos-cross-base" => {
        inherit_from    => [ "all-base" ],
        template         => 1,
        cflags           => add(sub { defined($ENV{'WATCH_MIN_SDK_VERSION'}) ? '-mwatchos-version-min=$(WATCH_MIN_SDK_VERSION)' : '-mwatchos-version-min=4.0'; }),
        defines          => [ "HAVE_FORK=0" ],
    },

    "macos-base" => {
        inherit_from     => [ "all-base" ],
        template         => 1,
        cflags           => add(sub { defined($ENV{'MACOS_MIN_SDK_VERSION'}) ? '-mmacosx-version-min=$(MACOS_MIN_SDK_VERSION)' : '-mmacosx-version-min=10.11'; }),
    },


    #—————————————————————————————————————————————————————————————————————
    # watchOS
    #—————————————————————————————————————————————————————————————————————

    # Apple Watch simulator. Note that watchOS is still fundamentally a 32-bit operating
    # system (arm64_32 uses 32-bit address space), so i386 simulator architecture is appropriate.
    "watchos-sim-cross-i386" => {
        inherit_from     => [ "darwin-common", "watchos-cross-base"],
        cflags           => add("-arch i386 -fembed-bitcode"),
        sys_id           => "WatchOS",
    },

    # Apple Watch up to Apple Watch Series 3.
    "watchos-cross-armv7k" => {
        inherit_from     => [ "darwin-common",  "watchos-cross-base" ],
        cflags           => add("-arch armv7k -fembed-bitcode -fno-asm"),
        sys_id           => "WatchOS",
    },

    # Apple Watch from Apple Watch Series 4 onward.
    "watchos-cross-arm64_32" => {
        inherit_from     => [ "darwin-common", "watchos-cross-base"],
        cflags           => add("-arch arm64_32 -fembed-bitcode"),
        sys_id           => "WatchOS",
    },


    #—————————————————————————————————————————————————————————————————————
    # iOS (including Catalyst)
    #—————————————————————————————————————————————————————————————————————

    # iPhone/iPad simulator.
    "ios-sim-cross-x86_64" => {
        inherit_from     => [ "darwin64-x86_64-cc", "ios-cross-base" ],
        sys_id           => "iOS",
    },

    "ios-sim-cross-arm64" => {
        inherit_from     => [ "darwin64-arm64-cc", "ios-cross-base" ],
        cflags           => add("-target arm64-apple-ios13.0-simulator"),
        sys_id           => "iOS",
    },

    # older iOS devices, but part of $(ARCHS_STANDARD). Version 10 is the latest supported
    # minumum. Although this conflicts with the inherited version, it overrides it successfully.
    "ios-cross-armv7" => {
        inherit_from     => [ "darwin-common", "ios-cross-base-old", asm("armv4_asm") ],
        cflags           => add("-arch armv7"),
        perlasm_scheme   => "ios32",
        sys_id           => "iOS",
    },
    
    # iPhone and iPad from iPhone 5s era.
    "ios64-cross-arm64" => {
        inherit_from     => [ "darwin-common", "ios-cross-base", asm("aarch64_asm") ],
        cflags           => add("-arch arm64"),
        bn_ops           => "SIXTY_FOUR_BIT_LONG RC4_CHAR",
        perlasm_scheme   => "ios64",
        sys_id           => "iOS",
    },

    # Catalyst (macOS)
    # Because it's an iOS target, we will respect the iOS bitcode setting that is inherited.
    "mac-catalyst-x86_64" => {
        inherit_from     => [ "darwin64-x86_64-cc", "iphoneos-base" ],
        cflags           => add("-target x86_64-apple-ios13.0-macabi"),
        sys_id           => "MacOSX",
    },

    "mac-catalyst-arm64" => {
        inherit_from     => [ "darwin64-arm64-cc", "iphoneos-base" ],
        cflags           => add("-target arm64-apple-ios13.0-macabi "),
        sys_id           => "MacOSX",
    },

    #—————————————————————————————————————————————————————————————————————
    # tvOS
    #—————————————————————————————————————————————————————————————————————

    ## Apple TV simulator (x86_64)
    "tvos-sim-cross-x86_64" => {
        inherit_from     => [ "darwin64-x86_64-cc", "tvos-cross-base" ],
        cflags           => add("-fembed-bitcode"),
        sys_id           => "tvOS",
    },

    ## Apple TV from Apple TV 4 onward.
    "tvos64-cross-arm64" => {
        inherit_from     => [ "darwin-common", "tvos-cross-base", asm("aarch64_asm") ],
        cflags           => add("-arch arm64 -fembed-bitcode"),
        bn_ops           => "SIXTY_FOUR_BIT_LONG RC4_CHAR",
        perlasm_scheme   => "ios64",
        sys_id           => "tvOS",
    },

    #—————————————————————————————————————————————————————————————————————
    # macOS
    #—————————————————————————————————————————————————————————————————————

    ## Apple macOS (x86_64)
    "macos64-x86_64" => {
        inherit_from     => [ "darwin64-x86_64-cc", "macos-base" ],
        sys_id           => "macOS",
    },

    ## Apple macOS (arm64)
    "macos64-arm64" => {
        inherit_from     => [ "darwin64-arm64-cc", "macos-base" ],
        sys_id           => "macOS",
    },

);
